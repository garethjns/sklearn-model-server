# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: model_server.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import model_server_pb2


class ModelServerBase(abc.ABC):

    @abc.abstractmethod
    async def predict(self, stream: 'grpclib.server.Stream[model_server_pb2.GrpcPredictRequest, model_server_pb2.GrpcPredictResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/model_server.ModelServer/predict': grpclib.const.Handler(
                self.predict,
                grpclib.const.Cardinality.UNARY_UNARY,
                model_server_pb2.GrpcPredictRequest,
                model_server_pb2.GrpcPredictResponse,
            ),
        }


class ModelServerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.predict = grpclib.client.UnaryUnaryMethod(
            channel,
            '/model_server.ModelServer/predict',
            model_server_pb2.GrpcPredictRequest,
            model_server_pb2.GrpcPredictResponse,
        )
